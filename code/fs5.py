from malware_model import build,METRIC,get_score
import cudf as gd
from ml_robot import timer
import os
import pandas as pd
import numpy as np
from bs import bslog,fit_predict
os.environ['CUDA_VISIBLE_DEVICES'] = '2'

def fw(model_name):
    good = []
    mode = 'cv'
    X,Xt,y,yt,names,tr_id,te_id = build(mode,build_list=[1,2],cache=[1,1])
    X2,Xt2,_,_,name2,_,_ = build(mode,build_list=[4],cache=[1])
    tags = ['_'.join(i.split('_')[1:-1]) for i in name2]
    name2col = {}
    for c,i in enumerate(name2):
        tag = '_'.join(i.split('_')[1:-1])
        if tag not in name2col:
            name2col[tag] = []
        name2col[tag].append(c)
    name3 = [i for i in name2col]
    yp,model = fit_predict(names,X,y,Xt,yt,model_name=model_name)
    del model
    best = get_score(yt,yp,METRIC)
    N = X.shape[1]
    for i in range(N):
        bf = None
        for c,col in enumerate(name3):
            if col in good:
                continue
            cols = name2col[col]
            if len(cols) == 1:
                continue
            X1,X1t = X2[:,cols],Xt2[:,cols] 
            X_tmp = np.hstack([X1,X])
            Xt_tmp = np.hstack([X1t,Xt])
            newcols = [name2[d] for d in cols]
            names_tmp = newcols+names
            yp,model = fit_predict(names_tmp,X_tmp,y,Xt_tmp,yt,model_name=model_name)
            del model
            score = get_score(yt,yp,METRIC)
            print(good+newcols[-1:],score,best)
            bslog(good+newcols[-1:],score,'fs_embed2.log')
            if best<score:
                best = score
                bf = col
                bfs = newcols
                Xb = X1.copy()
                Xtb = X1t.copy()
        if bf is None:
            break
        good.append(bf)
        names.extend(bfs)
        X,Xt = np.hstack([X,Xb]),np.hstack([Xt,Xtb])

if __name__ == '__main__':
    fw('xgb')
